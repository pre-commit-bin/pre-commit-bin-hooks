name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build pre-commit-bin-hooks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        id: binary
        with:
          bin: trailing-whitespace
          token: ${{ secrets.GITHUB_TOKEN }}
          dry-run: true
      - shell: bash
        run: |
          ls -la
          echo "ARCHIVE: ${{ steps.binary.outputs.archive }}"
      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: ${{ steps.binary.outputs.archive }}.*

  unit-tests:
    name: Unit tests
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          profile: minimal
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-unit-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Run unit tests
        run: cargo test

  test-release:
    needs:
      - unit-tests
      - build
    name: Test release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          profile: minimal
      - name: Donwload artifact
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: dist-*
          merge-multiple: true
      - shell: bash
        run: |
          ls -la
      - name: Publish
        run: |
          cargo login ${{ secrets.CRATES_TOKEN }}
          cargo publish -v --dry-run

  cargo-publish:
    if: startsWith(github.ref, 'refs/tags/')
    name: Release heldger-fmt
    needs: test-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          profile: minimal
      - name: Publish
        run: |
          cargo login ${{ secrets.CRATES_TOKEN }}
          cargo publish -v

  release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Release
    needs: cargo-publish
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get tag metadata
        id: tag
        run: |
          TAG_TITLE=${GITHUB_REF#refs/*/}
          echo "title=$TAG_TITLE" >> $GITHUB_OUTPUT
      - name: Download distribution
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist
      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.tag.outputs.title }}
          tag_name: ${{ steps.tag.outputs.title }}
          body: |
            See [CHANGELOG](https://github.com/mondeja/hledger-fmt/blob/master/CHANGELOG.md).
          draft: false
          prerelease: false
          files: ./dist/*